[{"/Users/shuntianli/Desktop/Web/React-learning/react-101/src/index.js":"1","/Users/shuntianli/Desktop/Web/React-learning/react-101/src/App.js":"2","/Users/shuntianli/Desktop/Web/React-learning/react-101/src/components/Expense.jsx":"3","/Users/shuntianli/Desktop/Web/React-learning/react-101/src/components/NewExpense/NewExpense.jsx":"4","/Users/shuntianli/Desktop/Web/React-learning/react-101/src/components/Card.jsx":"5","/Users/shuntianli/Desktop/Web/React-learning/react-101/src/components/ExpenseItem.jsx":"6","/Users/shuntianli/Desktop/Web/React-learning/react-101/src/components/NewExpense/ExpenseForm.jsx":"7","/Users/shuntianli/Desktop/Web/React-learning/react-101/src/components/ExpenseDate.jsx":"8","/Users/shuntianli/Desktop/Web/React-learning/react-101/src/components/ExpensesFilter.jsx":"9"},{"size":232,"mtime":1650240000032,"results":"10","hashOfConfig":"11"},{"size":1354,"mtime":1650695603413,"results":"12","hashOfConfig":"11"},{"size":1165,"mtime":1650697067695,"results":"13","hashOfConfig":"11"},{"size":673,"mtime":1650668781946,"results":"14","hashOfConfig":"11"},{"size":674,"mtime":1650345141974,"results":"15","hashOfConfig":"11"},{"size":1891,"mtime":1650698822778,"results":"16","hashOfConfig":"11"},{"size":4477,"mtime":1650668781946,"results":"17","hashOfConfig":"11"},{"size":538,"mtime":1650173903960,"results":"18","hashOfConfig":"11"},{"size":709,"mtime":1650697161548,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"lvwsi",{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shuntianli/Desktop/Web/React-learning/react-101/src/index.js",[],["41","42"],"/Users/shuntianli/Desktop/Web/React-learning/react-101/src/App.js",[],"/Users/shuntianli/Desktop/Web/React-learning/react-101/src/components/Expense.jsx",["43"],"/Users/shuntianli/Desktop/Web/React-learning/react-101/src/components/NewExpense/NewExpense.jsx",["44"],"import React from \"react\";\nimport { useState } from \"react/cjs/react.production.min\";\nimport \"./NewExpense.css\"\nimport ExpenseForm from \"./ExpenseForm\";\n\n\nconst NewExpense = (props) => { //C\n\n    // 0\n    const onSaveExpenseDataHandler = (enteredExpenseData) => {\n\n        //3\n        const expenseData = {\n            ...enteredExpenseData,\n            id: Math.random().toString()\n        };\n\n       // console.log(expenseData);\n       props.onAddExpense(expenseData);\n    }\n\n\n    return(\n        <div className=\"new-expense\">\n            {/* 1 */}\n            <ExpenseForm onSaveExpenseData={onSaveExpenseDataHandler}/>\n        </div>\n\n    )\n}\n\nexport default NewExpense","/Users/shuntianli/Desktop/Web/React-learning/react-101/src/components/Card.jsx",[],"/Users/shuntianli/Desktop/Web/React-learning/react-101/src/components/ExpenseItem.jsx",[],"/Users/shuntianli/Desktop/Web/React-learning/react-101/src/components/NewExpense/ExpenseForm.jsx",["45"],"import react, { useState } from \"react\";\nimport \"./ExpenseForm.css\"\n// import { useState } from \"react/cjs/react.production.min\";\n\nconst ExpenseForm = (props) => {\n    //Option 1: working with multiple state\n    const [enteredTitle, setEnteredTitle] = useState(\"\");\n    const [enteredAmount, setEnteredAmount] = useState(\"\");\n    const [enteredDate, setEnterDate] = useState(\"\");\n\n    const titleChangeHandler = (event) =>{\n        //console.log(\"Title Changed\");\n        //console.log(event.target.value);\n        setEnteredTitle(event.target.value);\n    }\n\n    const amountChangeHandler = (event) => {\n        setEnteredAmount(event.target.value);\n    }\n\n    const dateChangeHandler = (event) => {\n        setEnterDate(event.target.value);\n    }\n\n\n    // Option 2: because React schedule update. it does not perform the setUserInput funtion instantly there for we might consider option 3\n    // const [userInput, setUserInput] = useState({\n    //     enteredTitle: '',\n    //     entetedAmount: '',\n    //     enteredDate: ''\n    // })\n\n    // const titleChangeHandler = (event) =>{\n\n    //     setUserInput({\n    //         ...userInput,                       // copy all the key value pair from the previous userInput object\n    //         enteredTitle: event.target.value    // just overwrite the enteredTitle property\n            \n    //     })\n    // }\n\n    // const amountChangeHandler = (event) => {\n    //     setUserInput({\n    //         ...userInput,\n    //         enteredAmount: event.target.value\n    //     })\n    // }\n\n    // const dateChangeHandler = (event) => {\n    //     setUserInput({\n    //         ...userInput,\n    //         enteredDate: event.target.value\n    //     })\n    // }\n\n    //Option 3:\n    // const [userInput, setUserInput] = useState({\n    //     enteredTitle: '',\n    //     entetedAmount: '',\n    //     enteredDate: ''\n    // })\n\n    /*\n     by passing an anonymous function to the SET function.\n     React guaraneet that the 'prevState' contains the latest state of the value.\n     whenever the state update depends on the previous update, then we need to pass an anonymous funtion.\n    */\n    // const titleChangeHandler = (event) =>{\n\n    //     setUserInput((prevState)=>{\n    //         return({\n    //             ...prevState,\n    //             enteredTitle: event.target.value\n    //         })\n    //     })\n    // }\n\n    // const amountChangeHandler = (event) => {\n    //     setUserInput((prevState)=>{\n    //         return({\n    //             ...prevState,\n    //             entetedAmount: event.target.value\n    //         })\n    //     })\n    // }\n\n    // const dateChangeHandler = (event) => {\n    //     setUserInput((prevState)=>{\n    //         return({\n    //             ...prevState,\n    //             enteredDate: event.target.value\n    //         })\n    //     })\n    // }\n\n\n    const submitHandler = (event) => {\n        // not reloading the page, not sending new request to the server\n        event.preventDefault();\n\n        const expenseData = {\n            title: enteredTitle,\n            amount: enteredAmount,\n            date: new Date(enteredDate)\n        }\n\n        //console.log(expenseData);\n        props.onSaveExpenseData(expenseData); //2\n\n        setEnteredTitle('');\n        setEnteredAmount('');\n        setEnterDate('');\n\n    }\n\n    return(\n        <form onSubmit={submitHandler}>\n            <div className=\"new-expense__controls\">\n                <div className=\"new-expense__control\">\n                    <label >Title</label>\n                    {/* Adding Two-Way Binding */}\n                    <input type=\"text\" value={enteredTitle} onChange={titleChangeHandler} /> \n                </div>\n\n                <div className=\"new-expense__control\">\n                    <label >Amount</label>\n                    {/* Adding Two-Way Binding */}\n                    <input type=\"number\" min=\"0.01\" step=\"0.01\" value={enteredAmount} onChange={amountChangeHandler}/>\n                </div>\n\n                <div className=\"new-expense__control\">\n                    <label>Date</label>\n                    {/* Adding Two-Way Biding */}\n                    <input type=\"date\" min=\"2019-01-01\" step0=\"2022-12-31\" value={enteredDate} onChange={dateChangeHandler}/>\n                </div>\n            </div>\n            <div className=\"new-expense__actions\">\n                <button type=\"submit\">Add Expense</button>\n            </div>\n        </form>\n    )\n}\n\nexport default ExpenseForm;","/Users/shuntianli/Desktop/Web/React-learning/react-101/src/components/ExpenseDate.jsx",[],"/Users/shuntianli/Desktop/Web/React-learning/react-101/src/components/ExpensesFilter.jsx",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":7,"column":8,"nodeType":"52","messageId":"53","endLine":7,"endColumn":13},{"ruleId":"50","severity":1,"message":"54","line":2,"column":10,"nodeType":"52","messageId":"53","endLine":2,"endColumn":18},{"ruleId":"50","severity":1,"message":"51","line":1,"column":8,"nodeType":"52","messageId":"53","endLine":1,"endColumn":13},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]